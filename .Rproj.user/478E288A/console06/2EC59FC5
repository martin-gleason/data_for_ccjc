]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101[?1034hKnowhere:DataScience for the Court 101 marty$ [KKnowhere:DataScience for the Court 101 marty$ git init
Initialized empty Git repository in /Users/marty/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101/.git/
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git addd [K[K .
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101[?1034hKnowhere:DataScience for the Court 101 marty$ [KKnowhere:DataScience for the Court 101 marty$ git. inin[K[K[K[K[K[K[K [Kt init
Reinitialized existing Git repository in /Users/marty/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101/.git/
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git add .
warning: adding embedded git repository: data_for_ccjc
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint: 
hint: 	git submodule add <url> data_for_ccjc
hint: 
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint: 
hint: 	git rm --cached data_for_ccjc
hint: 
hint: See "git help submodule" for more information.
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git rm --=[Kcached data [K_for_ccjc
error: the following file has staged content different from both the
file and the HEAD:
    data_for_ccjc
(use -f to force removal)
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git [K[K[K[Kgit remote add origing[K https://github.com/martin-gleason/data_for_ccjc.git[K[K[K[K
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git push origin master
To https://github.com/martin-gleason/data_for_ccjc
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/martin-gleason/data_for_ccjc'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git pull
warning: no common commits
remote: Counting objects: 3, done.[K
remote: Compressing objects:  50% (1/2)   [Kremote: Compressing objects: 100% (2/2)   [Kremote: Compressing objects: 100% (2/2), done.[K
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0[K
Unpacking objects:  33% (1/3)   Unpacking objects:  66% (2/3)   Unpacking objects: 100% (3/3)   Unpacking objects: 100% (3/3), done.
From https://github.com/martin-gleason/data_for_ccjc
 * [new branch]      master     -> origin/master
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> master

]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git [K rm
usage: git rm [<options>] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched

]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ g[Kgit add 
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git add .
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git push origin master
To https://github.com/martin-gleason/data_for_ccjc
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/martin-gleason/data_for_ccjc'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
]0;~/Dropbox (Personal)/Coding Projects/R/DataScience for the Court 101Knowhere:DataScience for the Court 101 marty$ git oys[K[K[Kpou[K[Kush --help
